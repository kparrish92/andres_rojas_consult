srt_t_test %>%
filter(tap_or_trill == "tap") %>%
select(Participant, df, p_val, t_val, estimate, ci_lo, ci_hi) %>%
knitr::kable(digits = 3, caption = "Results of Paired t-tests of taps comparing duration during pre and post tests") %>%
kable_styling(full_width = FALSE)
View(srt_t_test)
srt_t_test %>%
filter(tap_or_trill == "trill") %>%
select(Participant, df, p_val, t_val, estimate, ci_lo, ci_hi) %>%
knitr::kable(digits = 3, caption = "Results of Paired t-tests of trills comparing duration during pre and post tests") %>%
kable_styling(full_width = FALSE)
# A script to tidy individual participant data for the sentence reading task
# Libraries
# 01 - a script to pull the data for para only in the sentence reading task
library(here)
library(tidyverse)
library(janitor)
library(fs)
list_of_files <- list.files(path = here("data", "raw"), recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE) %>%
as.data.frame()
df_f <- character()
for(thisRun in 1:nrow(list_of_files))
{
df <- read.csv(list_of_files$.[thisRun]) %>%
row_to_names(row_number = 1) %>%
clean_names() %>%
select(c(1:6)) %>%
slice(1:158) %>%
mutate("id" = list_of_files$.[thisRun]) %>%
mutate(col = 1:158)
colnames(df) <- c('sentence','token1','token2', 'duration1','duration2',
'occlusions', 'id', 'trial')
df_f <- rbind(df_f, df)
}
empty_as_na <- function(x){
if("factor" %in% class(x)) x <- as.character(x) ## since ifelse wont work with factors
ifelse(as.character(x)!="", x, NA)
}
srt_tidy <- df_f %>%
mutate_each(funs(empty_as_na)) %>%
mutate(is_trill = case_when(!is.na(duration1) ~ "tap",
!is.na(duration2) ~ "trill")) %>%
unite("duration", duration1:duration2) %>%
unite("token", token1:token2) %>%
mutate(duration = str_remove(duration, "NA_")) %>%
mutate(duration = str_remove(duration, "_NA")) %>%
mutate(token = str_remove(token, "_NA")) %>%
mutate(token = str_remove(token, "NA_")) %>%
filter(!is.na(duration)) %>%
mutate(id =
str_remove(id, "/Users/kyleparrish/Documents/GitHub/andres_rojas_consult/data/raw/")) %>%
mutate(id = str_remove(id, ".csv")) %>%
separate(id, into = c("participant", "level", "time"))
srt_tidy %>%
group_by(participant, time, is_trill) %>%
summarize(n = n())
srt_tidy %>%
write.csv(here("data", "tidy", "srt_data.csv"))
# 05 load data
library(here)
srt <- read.csv(here("data", "tidy", "srt_data.csv"))
para <- read.csv(here("data", "tidy", "para_data.csv"))
lectura <- read.csv(here("data", "tidy", "lectura_tidy.csv"))
image <- read.csv(here("data", "tidy", "image_df.csv"))
View(srt)
View(srt)
# A script to tidy individual participant data for the sentence reading task
# Libraries
# 01 - a script to pull the data for para only in the sentence reading task
library(here)
library(tidyverse)
library(janitor)
library(fs)
list_of_files <- list.files(path = here("data", "raw"), recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE) %>%
as.data.frame()
df_f <- character()
for(thisRun in 1:nrow(list_of_files))
{
df <- read.csv(list_of_files$.[thisRun]) %>%
row_to_names(row_number = 1) %>%
clean_names() %>%
select(c(1:6)) %>%
slice(1:158) %>%
mutate("id" = list_of_files$.[thisRun]) %>%
mutate(col = 1:158)
colnames(df) <- c('sentence','token1','token2', 'duration1','duration2',
'occlusions', 'id', 'trial')
df_f <- rbind(df_f, df)
}
empty_as_na <- function(x){
if("factor" %in% class(x)) x <- as.character(x) ## since ifelse wont work with factors
ifelse(as.character(x)!="", x, NA)
}
srt_tidy <- df_f %>%
mutate_each(funs(empty_as_na)) %>%
mutate(is_trill = case_when(!is.na(duration1) ~ "tap",
!is.na(duration2) ~ "trill")) %>%
unite("duration", duration1:duration2) %>%
unite("token", token1:token2) %>%
mutate(duration = str_remove(duration, "NA_")) %>%
mutate(duration = str_remove(duration, "_NA")) %>%
mutate(token = str_remove(token, "_NA")) %>%
mutate(token = str_remove(token, "NA_")) %>%
filter(!is.na(duration)) %>%
mutate(id =
str_remove(id, "/Users/kyleparrish/Documents/GitHub/andres_rojas_consult/data/raw/")) %>%
mutate(id = str_remove(id, ".csv")) %>%
separate(id, into = c("participant", "level", "time"))
srt_tidy %>%
group_by(participant, time, is_trill) %>%
summarize(n = n())
srt_tidy %>%
write.csv(here("data", "tidy", "srt_data.csv"))
library(here)
library(tidyverse)
library(janitor)
library(fs)
list_of_files <- list.files(path = here("data", "raw"), recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE) %>%
as.data.frame()
df_f <- character()
for(thisRun in 1:nrow(list_of_files))
{
df <- read.csv(list_of_files$.[thisRun]) %>%
row_to_names(row_number = 1) %>%
clean_names() %>%
select(c(1:6)) %>%
slice(1:158) %>%
mutate("id" = list_of_files$.[thisRun]) %>%
mutate(col = 1:158)
list_of_files <- list.files(path = here("data", "raw"), recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE) %>%
as.data.frame()
df_f <- character()
for(thisRun in 1:nrow(list_of_files))
{
df <- read.csv(list_of_files$.[thisRun]) %>%
row_to_names(row_number = 1) %>%
clean_names() %>%
select(c(1:6)) %>%
slice(1:158) %>%
mutate("id" = list_of_files$.[thisRun]) %>%
mutate(col = 1:158)
colnames(df) <- c('sentence','token1','token2', 'duration1','duration2',
'occlusions', 'id', 'trial')
df_f <- rbind(df_f, df)
}
d
# A script to tidy individual participant data for the sentence reading task
# Libraries
# 01 - a script to pull the data for para only in the sentence reading task
library(here)
library(tidyverse)
library(janitor)
library(fs)
list_of_files <- list.files(path = here("data", "raw"), recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE) %>%
as.data.frame()
df_f <- character()
for(thisRun in 1:nrow(list_of_files))
{
df <- read.csv(list_of_files$.[thisRun]) %>%
row_to_names(row_number = 1) %>%
clean_names() %>%
select(c(1:6)) %>%
slice(1:158) %>%
mutate("id" = list_of_files$.[thisRun]) %>%
mutate(col = 1:158)
colnames(df) <- c('sentence','token1','token2', 'duration1','duration2',
'occlusions', 'id', 'trial')
df_f <- rbind(df_f, df)
}
# A script to tidy individual participant data for the sentence reading task
# Libraries
# 01 - a script to pull the data for para only in the sentence reading task
library(here)
library(tidyverse)
library(janitor)
library(fs)
list_of_files <- list.files(path = here("data", "raw"), recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE) %>%
as.data.frame()
df_f <- character()
for(thisRun in 1:nrow(list_of_files))
{
df <- read.csv(list_of_files$.[thisRun]) %>%
row_to_names(row_number = 1) %>%
clean_names() %>%
select(c(1:6)) %>%
slice(1:158) %>%
mutate("id" = list_of_files$.[thisRun]) %>%
mutate(col = 1:158)
colnames(df) <- c('sentence','token1','token2', 'duration1','duration2',
'occlusions', 'id', 'trial')
df_f <- rbind(df_f, df)
}
empty_as_na <- function(x){
if("factor" %in% class(x)) x <- as.character(x) ## since ifelse wont work with factors
ifelse(as.character(x)!="", x, NA)
}
View(df_f)
srt_tidy <- df_f %>%
mutate_each(funs(empty_as_na)) %>%
mutate(is_trill = case_when(!is.na(duration1) ~ "tap",
!is.na(duration2) ~ "trill")) %>%
unite("duration", duration1:duration2) %>%
unite("token", token1:token2) %>%
mutate(duration = str_remove(duration, "NA_")) %>%
mutate(duration = str_remove(duration, "_NA")) %>%
mutate(token = str_remove(token, "_NA")) %>%
mutate(token = str_remove(token, "NA_")) %>%
filter(!is.na(duration)) %>%
mutate(id =
str_remove(id, "/Users/kyleparrish/Documents/GitHub/andres_rojas_consult/data/raw/")) %>%
mutate(id = str_remove(id, ".csv")) %>%
separate(id, into = c("participant", "level", "time"))
View(srt_tidy)
srt_tidy %>%
group_by(participant, time, is_trill) %>%
summarize(n = n())
srt_tidy %>%
group_by(participant, time, is_trill, level) %>%
summarize(n = n())
srt_tidy %>%
write.csv(here("data", "tidy", "srt_data.csv"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(here)
library(tidyverse)
library(kableExtra)
source(here("scripts", "05_load_data.R"))
tap_df <- srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
filter(is_trill == "tap") %>%
summarize(mean = mean(as.numeric(duration))) %>%
pivot_wider(names_from = participant, values_from = mean) %>%
dplyr::select(time, P1E, P3E, P5E, P6E, P7E, P8E) %>%
arrange(desc(time))
tap_df$is_trill <- NULL
tap_df %>%
knitr::kable(digits = 2, caption = "Average duration of tap productions during pre and post-tests per participant") %>%
kable_styling(full_width = FALSE)
View(tap_df)
View(srt)
srt = srt(filter(level == "sp1"))
srt = srt %>%
filter(level == "sp1"))
library(here)
library(tidyverse)
library(kableExtra)
source(here("scripts", "05_load_data.R"))
srt = srt %>%
filter(level == "sp1")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(here)
library(tidyverse)
library(kableExtra)
source(here("scripts", "05_load_data.R"))
srt = srt %>%
filter(level == "sp102")
level_order <- c('PRE', 'POST')
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
filter(is_trill == "tap") %>%
ggplot(aes(x = factor(time, level = level_order), y = as.numeric(duration), color = is_trill)) + geom_boxplot(fill = "deepskyblue4", color = "black", outlier.size = 0) +
facet_wrap(~participant) + xlab("Test Time") + ylab("Rhotic Duration (ms)") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") + ggtitle("Taps")
srt_t_test %>%
filter(tap_or_trill == "trill") %>%
select(Participant, df, p_val, t_val, estimate, ci_lo, ci_hi) %>%
knitr::kable(digits = 3, caption = "Spanish 2: Results of Paired t-tests of trills comparing duration during pre and post tests") %>%
kable_styling(full_width = FALSE)
source(here("scripts", "05_load_data.R"))
source(here("scripts", "05_load_data.R"))
library(here)
library(tidyverse)
library(janitor)
library(fs)
library(lme4)
# load tidy data
source(here("scripts", "05_load_data.R"))
srt_sp1 = srt %>% filter(level == "sp1")
srt_sp2 = srt %>% filter(level == "sp102")
p1_tap_srt_2 = run_t_test(df = srt_sp2, p_id = "P1E", segment = "tap") %>%
mutate(task = "srt")
p1_trill_srt_2 = run_t_test(df = srt_sp2, p_id = "P1E", segment = "trill") %>%
mutate(task = "srt")
source(here("scripts", "00_helpers.R"))
p1_tap_srt_2 = run_t_test(df = srt_sp2, p_id = "P1E", segment = "tap") %>%
mutate(task = "srt")
p1_trill_srt_2 = run_t_test(df = srt_sp2, p_id = "P1E", segment = "trill") %>%
mutate(task = "srt")
srt_t_df_2 = rbind(p1_tap_srt_2, p1_trill_srt_2)
View(srt_t_df_2)
srt_t_df_2 %>%
write.csv(here("data", "tidy", "srt_t_tests_2.csv"))
srt_sp2 = read.csv(here("data", "tidy", "srt_t_tests_2.csv"))
srt_t_test_sp2 = read.csv(here("data", "tidy", "srt_t_tests_2.csv"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(here)
library(tidyverse)
library(kableExtra)
source(here("scripts", "05_load_data.R"))
library(here)
library(tidyverse)
library(kableExtra)
source(here("scripts", "05_load_data.R"))
tap_df <- srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
filter(is_trill == "tap") %>%
summarize(mean = mean(as.numeric(duration))) %>%
pivot_wider(names_from = participant, values_from = mean) %>%
dplyr::select(time, P1E) %>%
arrange(desc(time))
tap_df$is_trill <- NULL
tap_df %>%
knitr::kable(digits = 2, caption = "Spanish 2: Average duration of tap productions during pre and post-tests per participant") %>%
kable_styling(full_width = FALSE)
srt_sp2 = srt %>%
filter(level == "sp102")
tap_df <- srt_sp2 %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
filter(is_trill == "tap") %>%
summarize(mean = mean(as.numeric(duration))) %>%
pivot_wider(names_from = participant, values_from = mean) %>%
dplyr::select(time, P1E) %>%
arrange(desc(time))
tap_df$is_trill <- NULL
tap_df %>%
knitr::kable(digits = 2, caption = "Spanish 2: Average duration of tap productions during pre and post-tests per participant") %>%
kable_styling(full_width = FALSE)
View(srt_t_test_sp2)
level_order <- c('PRE', 'POST')
srt_sp2 %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
filter(is_trill == "tap") %>%
ggplot(aes(x = factor(time, level = level_order), y = as.numeric(duration), color = is_trill)) + geom_boxplot(fill = "deepskyblue4", color = "black", outlier.size = 0) +
facet_wrap(~participant) + xlab("Test Time") + ylab("Rhotic Duration (ms)") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") + ggtitle("Taps")
level_order <- c('PRE', 'POST')
srt_sp2 %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
filter(is_trill == "trill") %>%
ggplot(aes(x = factor(time, level = level_order), y = as.numeric(duration), color = is_trill)) + geom_boxplot(fill = "deepskyblue4", color = "black", outlier.size = 0) +
facet_wrap(~participant) + xlab("Test Time") + ylab("Rhotic Duration (ms)") +
theme_bw() +
theme(panel.background = element_rect(fill = "grey79"),
legend.position = "bottom") + theme(legend.position = "none") + ggtitle("Trills")
trill_df <- srt_sp2 %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
filter(is_trill == "trill") %>%
summarize(mean = mean(as.numeric(duration))) %>%
pivot_wider(names_from = participant, values_from = mean) %>%
dplyr::select(time, P1E) %>%
arrange(desc(time))
trill_df$is_trill <- NULL
trill_df %>%
knitr::kable(digits = 2, caption = "Spanish 2 - Average duration of trill productions during pre and post-tests per participant") %>%
kable_styling(full_width = FALSE)
srt_t_test_sp2 %>%
filter(tap_or_trill == "tap") %>%
select(Participant, df, p_val, t_val, estimate, ci_lo, ci_hi) %>%
knitr::kable(digits = 3, caption = "Spanish 2: Results of Paired t-tests of taps comparing duration during pre and post tests") %>%
kable_styling(full_width = FALSE)
srt_t_test_sp2 %>%
filter(tap_or_trill == "trill") %>%
select(Participant, df, p_val, t_val, estimate, ci_lo, ci_hi) %>%
knitr::kable(digits = 3, caption = "Spanish 2 - Results of Paired t-tests of trills comparing duration during pre and post tests") %>%
kable_styling(full_width = FALSE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.show = "hold")
library(here)
library(tidyverse)
library(janitor)
library(fs)
library(lme4)
# load tidy data
source(here("scripts", "00_helpers.R"))
source(here("scripts", "05_load_data.R"))
library(here)
library(tidyverse)
library(janitor)
library(fs)
library(lme4)
# load tidy data
source(here("scripts", "00_helpers.R"))
source(here("scripts", "05_load_data.R"))
View(srt)
srt_101 = srt %>%
filter(level == "sp1")
View(srt_101)
srt_101_tap = srt %>%
filter(level == "sp1") %>%
filter(is_trill == "tap")
View(srt_101_tap)
null_mod_tap_sp1 = lmer(duration ~ 1 + (trial | participant))
null_mod_tap_sp1 = lmer(duration ~ 1 +
(trial | participant),
data = srt_101_tap)
srt_101_tap$duration = as.numeric(srt_101_tap$duration)
# filter data to get only taps for Spanish 1 students
srt_101_tap = srt %>%
filter(level == "sp1") %>%
filter(is_trill == "tap") %>%
filter(!is.na(duration))
srt_101_tap$duration = as.numeric(srt_101_tap$duration)
null_mod_tap_sp1 = lmer(duration ~ 1 +
(trial | participant),
data = srt_101_tap)
null_mod_tap_sp1 = lmer(duration ~ 1 +
(1 | participant),
data = srt_101_tap)
time_mod_tap_sp1 = lmer(duration ~ time +
(1 | participant),
data = srt_101_tap)
anova(null_mod_tap_sp1, time_mod_tap_sp1)
srt_101_trill = srt %>%
filter(level == "sp1") %>%
filter(is_trill == "trill") %>%
filter(!is.na(duration))
srt_101_trill$duration = as.numeric(srt_101_trill$duration)
srt_101_tap$duration = as.numeric(srt_101_tap$duration)
null_mod_trill_sp1 = lmer(duration ~ 1 +
(1 | participant),
data = srt_101_trill)
time_mod_trill_sp1 = lmer(duration ~ time +
(1 | participant),
data = srt_101_trill)
anova(null_mod_trill_sp1, time_mod_trill_sp1)
anova(null_mod_tap_sp1, time_mod_tap_sp1)
qqplot(time_mod_tap_sp1)
qqnorm(resid(time_mod_tap_sp1))
qqnorm(resid(time_mod_trill_sp1))
library(here)
library(tidyverse)
library(janitor)
library(fs)
library(lme4)
# load tidy data
source(here("scripts", "00_helpers.R"))
source(here("scripts", "05_load_data.R"))
# filter data to get only taps for Spanish 1 students
srt_101_tap = srt %>%
filter(level == "sp1") %>%
filter(is_trill == "tap") %>%
filter(!is.na(duration))
srt_101_trill = srt %>%
filter(level == "sp1") %>%
filter(is_trill == "trill") %>%
filter(!is.na(duration))
srt_101_trill$duration = as.numeric(srt_101_trill$duration)
srt_101_tap$duration = as.numeric(srt_101_tap$duration)
# Do nested model comparisons to determine
# whether a main effect for time exists
null_mod_tap_sp1 = lmer(duration ~ 1 +
(1 | participant),
data = srt_101_tap)
time_mod_tap_sp1 = lmer(duration ~ time +
(1 | participant),
data = srt_101_tap)
anova(null_mod_tap_sp1, time_mod_tap_sp1)
qqnorm(resid(time_mod_tap_sp1))
######
null_mod_trill_sp1 = lmer(duration ~ 1 +
(1 | participant),
data = srt_101_trill)
time_mod_trill_sp1 = lmer(duration ~ time +
(1 | participant),
data = srt_101_trill)
anova(null_mod_trill_sp1, time_mod_trill_sp1)
qqnorm(resid(time_mod_trill_sp1))
anova(null_mod_trill_sp1, time_mod_trill_sp1)
fixef(time_mod_trill_sp1)
qqnorm(resid(time_mod_trill_sp1))
knitr::opts_chunk$set(echo = TRUE)
null_mod_trill_sp1 = lmer(duration ~ 1 +
(1 | participant),
data = srt_101_trill)
time_mod_trill_sp1 = lmer(duration ~ time +
(1 | participant),
data = srt_101_trill)
anova(null_mod_trill_sp1, time_mod_trill_sp1)
fixef(time_mod_trill_sp1)
qqnorm(resid(time_mod_trill_sp1))
summary(time_mod_trill_sp1)
library(here)
library(tidyverse)
library(janitor)
library(fs)
library(lme4)
library(lmerTest)
summary(time_mod_trill_sp1)
View(srt_101_tap)
srt_101_tap %>%
ggplot(aes(x = duration, y = time)) + geom_boxplot()
srt_101_trill %>%
ggplot(aes(x = duration, y = time)) + geom_boxplot()
srt_101_trill %>% filter(duration > 50)
