test <- t.test(t1_filt$duration, t2_filt$duration, paired = TRUE)
p = test$p.value
t = test$statistic
est = test$estimate
ci_lo = test$conf.int[1]
ci_hi = test$conf.int[2]
output_df = data.frame("Participant" = p_id,
"tap_or_trill" = segment,
"p_val" = test$p.value,
"t_val" = test$statistic,
"estimate" = test$estimate,
"ci_lo" = test$conf.int[1],
"ci_hi" = test$conf.int[2])
return(output_df)
}
run_t_test(df = srt, p_id = "P1E", segment = "tap")
run_t_test = function(df, p_id, segment)
{
t1 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "PRE")
t2 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "POST")
t1_na <- t1 %>%
filter(duration == "N/A")
t2_na <- t2 %>%
filter(duration == "N/A")
remove_list <- rbind(t1_na, t2_na)
t2_filt = t2 %>%
filter(!trial %in% remove_list$trial)
t1_filt = t1 %>%
filter(!trial %in% remove_list$trial)
t1_filt$duration <- as.numeric(t1_filt$duration)
t2_filt$duration <- as.numeric(t2_filt$duration)
test <- t.test(t1_filt$duration, t2_filt$duration, paired = TRUE)
p = test$p.value
t = test$statistic
est = test$estimate
ci_lo = test$conf.int[1]
ci_hi = test$conf.int[2]
output_df = data.frame("Participant" = p_id,
"tap_or_trill" = segment,
"p_val" = test$p.value,
"t_val" = test$statistic,
"estimate" = test$estimate,
"ci_lo" = test$conf.int[1],
"ci_hi" = test$conf.int[2])
return(output_df)
}
run_t_test(df = srt, p_id = "P1E", segment = "tap")
run_t_test(df = srt, p_id = "P1E", segment = "tap")
run_t_test(df = srt, p_id = "P1E", segment = "trill")
run_t_test(df = srt, p_id = "P3E", segment = "tap")
run_t_test(df = srt, p_id = "P3E", segment = "trill")
run_t_test(df = srt, p_id = "P5E", segment = "tap")
run_t_test(df = srt, p_id = "P5E", segment = "trill")
run_t_test(df = srt, p_id = "P3E", segment = "tap")
run_t_test(df = srt, p_id = "P3E", segment = "trill")
p_id = "P3E"
df <- srt
segment <- "trill"
t1 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "PRE")
t2 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "POST")
t1_na <- t1 %>%
filter(duration == "N/A")
t2_na <- t2 %>%
filter(duration == "N/A")
remove_list <- rbind(t1_na, t2_na)
t2_filt = t2 %>%
filter(!trial %in% remove_list$trial)
filter(!trial %in% remove_list$trial)
t1_filt = t1 %>%
filter(!trial %in% remove_list$trial)
View(t2_filt)
run_t_test = function(df, p_id, segment)
{
t1 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "PRE")
t2 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "POST")
t1_na <- t1 %>%
filter(duration == "N/A" | duration == "N/A /d/")
t2_na <- t2 %>%
filter(duration == "N/A" | duration == "N/A /d/")
remove_list <- rbind(t1_na, t2_na)
t2_filt = t2 %>%
filter(!trial %in% remove_list$trial)
t1_filt = t1 %>%
filter(!trial %in% remove_list$trial)
t1_filt$duration <- as.numeric(t1_filt$duration)
t2_filt$duration <- as.numeric(t2_filt$duration)
test <- t.test(t1_filt$duration, t2_filt$duration, paired = TRUE)
p = test$p.value
t = test$statistic
est = test$estimate
ci_lo = test$conf.int[1]
ci_hi = test$conf.int[2]
output_df = data.frame("Participant" = p_id,
"tap_or_trill" = segment,
"p_val" = test$p.value,
"t_val" = test$statistic,
"estimate" = test$estimate,
"ci_lo" = test$conf.int[1],
"ci_hi" = test$conf.int[2])
return(output_df)
}
run_t_test(df = srt, p_id = "P1E", segment = "tap")
run_t_test(df = srt, p_id = "P3E", segment = "tap")
run_t_test(df = srt, p_id = "P3E", segment = "trill")
run_t_test(df = srt, p_id = "P1E", segment = "tap")
run_t_test(df = srt, p_id = "P1E", segment = "trill")
run_t_test(df = srt, p_id = "P3E", segment = "tap")
run_t_test(df = srt, p_id = "P3E", segment = "trill")
run_t_test(df = srt, p_id = "P5E", segment = "tap")
run_t_test(df = srt, p_id = "P5E", segment = "trill")
run_t_test(df = srt, p_id = "P5E", segment = "tap")
run_t_test(df = srt, p_id = "P5E", segment = "trill")
p_id = "P5E"
segment <- "trill"
t1 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "PRE")
t2 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "POST")
t1_na <- t1 %>%
filter(duration == "N/A" | duration == "N/A /d/")
t2_na <- t2 %>%
filter(duration == "N/A" | duration == "N/A /d/")
remove_list <- rbind(t1_na, t2_na)
t2_filt = t2 %>%
filter(!trial %in% remove_list$trial)
t1_filt = t1 %>%
filter(!trial %in% remove_list$trial)
View(t1_filt)
View(t2_filt)
View(t2_na)
View(t1_na)
View(t2_filt)
View(remove_list)
t2 %>%
filter(!trial %in% remove_list$trial)
t2_filt = t2 %>%
filter(!trial %in% remove_list$trial)
t1_filt = t1 %>%
filter(!trial %in% remove_list$trial)
View(srt)
srt %>%
group_by(participant, time, is_trill) %>%
summarize(n = n())
View(t2)
View(t1)
t2_filt = filter(trial %in% t1_filt$trial)
t2_filt = t2_filt %>% filter(trial %in% t1_filt$trial)
run_t_test = function(df, p_id, segment)
{
t1 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "PRE")
t2 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "POST")
t1_na <- t1 %>%
filter(duration == "N/A" | duration == "N/A /d/")
t2_na <- t2 %>%
filter(duration == "N/A" | duration == "N/A /d/")
remove_list <- rbind(t1_na, t2_na)
t2_filt = t2 %>%
filter(!trial %in% remove_list$trial)
t1_filt = t1 %>%
filter(!trial %in% remove_list$trial)
t2_filt = t2_filt %>% filter(trial %in% t1_filt$trial)
t1_filt$duration <- as.numeric(t1_filt$duration)
t2_filt$duration <- as.numeric(t2_filt$duration)
test <- t.test(t1_filt$duration, t2_filt$duration, paired = TRUE)
p = test$p.value
t = test$statistic
est = test$estimate
ci_lo = test$conf.int[1]
ci_hi = test$conf.int[2]
output_df = data.frame("Participant" = p_id,
"tap_or_trill" = segment,
"p_val" = test$p.value,
"t_val" = test$statistic,
"estimate" = test$estimate,
"ci_lo" = test$conf.int[1],
"ci_hi" = test$conf.int[2])
return(output_df)
}
run_t_test(df = srt, p_id = "P1E", segment = "tap")
run_t_test(df = srt, p_id = "P1E", segment = "trill")
run_t_test(df = srt, p_id = "P3E", segment = "tap")
run_t_test(df = srt, p_id = "P3E", segment = "trill")
run_t_test(df = srt, p_id = "P5E", segment = "tap")
run_t_test(df = srt, p_id = "P5E", segment = "trill")
segment = "tap"
t1 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "PRE")
t2 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "POST")
t1_na <- t1 %>%
filter(duration == "N/A" | duration == "N/A /d/")
t2_na <- t2 %>%
filter(duration == "N/A" | duration == "N/A /d/")
remove_list <- rbind(t1_na, t2_na)
t2_filt = t2 %>%
filter(!trial %in% remove_list$trial)
t1_na <- t1 %>%
filter(duration == "N/A" | duration == "N/A /d/")
t2_na <- t2 %>%
filter(duration == "N/A" | duration == "N/A /d/")
remove_list <- rbind(t1_na, t2_na)
t2_filt = t2 %>%
filter(!trial %in% remove_list$trial)
t1_filt = t1 %>%
filter(!trial %in% remove_list$trial)
t2_filt = t2_filt %>% filter(trial %in% t1_filt$trial)
t1_filt = t1_filt %>% filter(trial %in% t2_filt$trial)
run_t_test = function(df, p_id, segment)
{
t1 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "PRE")
t2 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "POST")
t1_na <- t1 %>%
filter(duration == "N/A" | duration == "N/A /d/")
t2_na <- t2 %>%
filter(duration == "N/A" | duration == "N/A /d/")
remove_list <- rbind(t1_na, t2_na)
t2_filt = t2 %>%
filter(!trial %in% remove_list$trial)
t1_filt = t1 %>%
filter(!trial %in% remove_list$trial)
t2_filt = t2_filt %>% filter(trial %in% t1_filt$trial)
t1_filt = t1_filt %>% filter(trial %in% t2_filt$trial)
t1_filt$duration <- as.numeric(t1_filt$duration)
t2_filt$duration <- as.numeric(t2_filt$duration)
test <- t.test(t1_filt$duration, t2_filt$duration, paired = TRUE)
p = test$p.value
t = test$statistic
est = test$estimate
ci_lo = test$conf.int[1]
ci_hi = test$conf.int[2]
output_df = data.frame("Participant" = p_id,
"tap_or_trill" = segment,
"p_val" = test$p.value,
"t_val" = test$statistic,
"estimate" = test$estimate,
"ci_lo" = test$conf.int[1],
"ci_hi" = test$conf.int[2])
return(output_df)
}
run_t_test(df = srt, p_id = "P5E", segment = "tap")
run_t_test(df = srt, p_id = "P5E", segment = "trill")
source('~/Documents/GitHub/andres_rojas_consult/scripts/06_analysis_caspslap.R', echo=TRUE)
p1_tap_srt = run_t_test(df = srt, p_id = "P1E", segment = "tap") %>%
mutate(task = "srt")
p1_tap_srt = run_t_test(df = srt, p_id = "P1E", segment = "tap") %>%
mutate(task = "srt")
p1_trill_srt = run_t_test(df = srt, p_id = "P1E", segment = "trill") %>%
mutate(task = "srt")
p3_tap_srt = run_t_test(df = srt, p_id = "P3E", segment = "tap") %>%
mutate(task = "srt")
p3_trill_srt = run_t_test(df = srt, p_id = "P3E", segment = "trill") %>%
mutate(task = "srt")
p5_tap_srt = run_t_test(df = srt, p_id = "P5E", segment = "tap") %>%
mutate(task = "srt")
p5_trill_srt = run_t_test(df = srt, p_id = "P5E", segment = "trill") %>%
mutate(task = "srt")
rbind(p1_tap_srt, p1_trill_srt,
p1_tap_srt, p1_trill_srt,
p1_tap_srt, p1_trill_srt)
srt_t_df <- rbind(p1_tap_srt, p1_trill_srt,
p3_tap_srt, p3_trill_srt,
p5_tap_srt, p5_trill_srt)
View(srt_t_df)
srt %>%
group_by(participant, is_trill, time) %>%
summarize(mean = mean(duration))
srt %>%
filter()
group_by(participant, is_trill, time) %>%
summarize(mean = mean(duration)) %>%
filter(duration == "N/A" | duration == "N/A /d/")
srt %>%
filter(duration == "N/A" | duration == "N/A /d/")
srt %>%
filter(duration == "N/A" | duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
summarize(mean = mean(duration))
srt %>%
filter(duration == "N/A" | duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
summarize(mean = mean(as.numeric(duration)))
srt %>%
filter(duration == "N/A" | duration == "N/A /d/")
source('~/Documents/GitHub/andres_rojas_consult/scripts/00_helpers.R', echo=TRUE)
v = srt %>%
filter(duration == "N/A" | duration == "N/A /d/")
View(v)
View(v)
srt %>%
filter(!duration == "N/A" | duration == "N/A /d/")
srt %>%
filter(!duration == "N/A" | duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
summarize(mean = mean(as.numeric(duration)))
srt %>%
filter(!duration == "N/A" | duration == "N/A /d/")
v = srt %>%
filter(!duration == "N/A" | duration == "N/A /d/")
View(v)
v = srt %>%
filter(!duration == "N/A" | !duration == "N/A /d/")
v = srt %>%
filter(!duration == "N/A" | !duration == "N/A /d/")
srt %>%
filter(!duration == "N/A" | !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
summarize(mean = mean(as.numeric(duration)))
srt %>%
filter(!duration == "N/A" | !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
summarize(mean = mean(as.numeric(duration)))
v = srt %>%
filter(!duration == "N/A" | !duration == "N/A /d/")
View(v)
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/")
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
summarize(mean = mean(as.numeric(duration)))
srt_t_df <- rbind(p1_tap_srt, p1_trill_srt,
p3_tap_srt, p3_trill_srt,
p5_tap_srt, p5_trill_srt)
View(srt_t_df)
source('~/Documents/GitHub/andres_rojas_consult/scripts/00_helpers.R', echo=TRUE)
run_t_test = function(df, p_id, segment)
{
t1 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "PRE")
t2 <- df %>%
filter(participant == p_id) %>%
filter(is_trill == segment) %>%
filter(time == "POST")
t1_na <- t1 %>%
filter(duration == "N/A" | duration == "N/A /d/")
t2_na <- t2 %>%
filter(duration == "N/A" | duration == "N/A /d/")
remove_list <- rbind(t1_na, t2_na)
t2_filt = t2 %>%
filter(!trial %in% remove_list$trial)
t1_filt = t1 %>%
filter(!trial %in% remove_list$trial)
t2_filt = t2_filt %>% filter(trial %in% t1_filt$trial)
t1_filt = t1_filt %>% filter(trial %in% t2_filt$trial)
t1_filt$duration <- as.numeric(t1_filt$duration)
t2_filt$duration <- as.numeric(t2_filt$duration)
test <- t.test(t2_filt$duration, t1_filt$duration, paired = TRUE)
p = test$p.value
t = test$statistic
est = test$estimate
ci_lo = test$conf.int[1]
ci_hi = test$conf.int[2]
output_df = data.frame("Participant" = p_id,
"tap_or_trill" = segment,
"p_val" = test$p.value,
"t_val" = test$statistic,
"estimate" = test$estimate,
"ci_lo" = test$conf.int[1],
"ci_hi" = test$conf.int[2])
return(output_df)
}
v = srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
summarize(mean = mean(as.numeric(duration)))
library(here)
library(tidyverse)
library(janitor)
library(fs)
library(lme4)
# load tidy data
source(here("scripts", "05_load_data.R"))
# Run t-test using helper function (see code in `00_helpers.R`.
p1_tap_srt = run_t_test(df = srt, p_id = "P1E", segment = "tap") %>%
mutate(task = "srt")
p1_trill_srt = run_t_test(df = srt, p_id = "P1E", segment = "trill") %>%
mutate(task = "srt")
p3_tap_srt = run_t_test(df = srt, p_id = "P3E", segment = "tap") %>%
mutate(task = "srt")
p3_trill_srt = run_t_test(df = srt, p_id = "P3E", segment = "trill") %>%
mutate(task = "srt")
p5_tap_srt = run_t_test(df = srt, p_id = "P5E", segment = "tap") %>%
mutate(task = "srt")
p5_trill_srt = run_t_test(df = srt, p_id = "P5E", segment = "trill") %>%
mutate(task = "srt")
# combine output into df for visualizations and reporting
srt_t_df <- rbind(p1_tap_srt, p1_trill_srt,
p3_tap_srt, p3_trill_srt,
p5_tap_srt, p5_trill_srt)
View(srt_t_df)
srt_t_df %>%
write.csv(here("data", "tidy", "srt_t_tests.csv"))
source(here("scripts", "05_load_data.R"))
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
ggplot(aes(x = as.numeric(duration), y = time,)) + geom_point()
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
ggplot(aes(x = time, y = as.numeric(duration))) + geom_point()
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
ggplot(aes(x = time, y = as.numeric(duration))) + geom_point() +
facet_wrap(~participant)
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
ggplot(aes(x = time, y = as.numeric(duration))) + geom_boxplot() +
facet_wrap(~participant)
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
ggplot(aes(x = time, y = as.numeric(duration), color = is_trill)) + geom_boxplot() +
facet_wrap(~participant)
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
ggplot(aes(x = as.numeric(duration), y = time, color = is_trill)) + geom_boxplot() +
facet_wrap(~participant)
knitr::opts_chunk$set(echo = FALSE)
srt_t_test <- read.csv(here("data", "tidy", "srt_t_tests.csv"))
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
summarize(mean = mean(as.numeric(duration)))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
srt_t_test <- read.csv(here("data", "tidy", "srt_t_tests.csv")) %>%
knitr::kable()
srt_t_test
srt_t_test %>%
filter(tap_or_trill = "trill") %>%
knitr::kable()
srt_t_test %>%
filter(tap_or_trill = "trill")
srt_t_test %>%
filter(tap_or_trill = "trill")
srt_t_test <- read.csv(here("data", "tidy", "srt_t_tests.csv"))
filt1 <- srt_t_test %>%
filter(tap_or_trill = "tap")
View(srt_t_test)
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
filter(is_trill == "tap") %>%
summarize(mean = mean(as.numeric(duration)))
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
filter(is_trill == "tap") %>%
summarize(mean = mean(as.numeric(duration))) %>%
pivot_wider(names_from = participant, values_from = mean)
srt %>%
filter(!duration == "N/A" & !duration == "N/A /d/") %>%
group_by(participant, is_trill, time) %>%
filter(is_trill == "trill") %>%
summarize(mean = mean(as.numeric(duration))) %>%
pivot_wider(names_from = participant, values_from = mean)
srt_t_test %>%
filter(tap_or_trill == "tap") %>%
pivot_wider(names_from = participant, values_from = mean)
View(srt_t_test)
srt_t_test %>%
filter(tap_or_trill == "tap") %>%
pivot_wider(names_from = participant, values_from = p_val)
View(srt_t_test)
srt_t_test %>%
filter(tap_or_trill == "tap") %>%
pivot_wider(names_from = Participant, values_from = p_val)
srt_t_test %>%
filter(tap_or_trill == "tap") %>%
pivot_wider(names_from = Participant, values_from = all)
srt_t_test %>%
filter(tap_or_trill == "tap") %>%
pivot_wider(names_from = Participant, values_from = p_val)
srt_t_test %>%
filter(tap_or_trill == "tap")
